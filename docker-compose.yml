version: '3'
services:
  #PHP Service
  app:
    image: php:${PHP_V}-fpm
    container_name: app_${DOCKER_NAME}
    restart: unless-stopped
    #command: bash /scripts/init.sh
    entrypoint: bash /scripts/init.sh
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /app
    volumes:
      - ${PROJECT_PATH}:/app
      - ${DOCKER_PATH}/php/init.sh:/scripts/init.sh
      - ${DOCKER_PATH}/php/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
    expose:
      - ${PHP_PORT}
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver_${DOCKER_NAME}
    restart: unless-stopped
    tty: true
    ports:
      - ${SERVER_PORT}:80
      #- 443:443
    volumes:
      - ${PROJECT_PATH}:/app
      - ${DOCKER_PATH}/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8
    container_name: db_${DOCKER_NAME}
    command: --init-file /etc/mysql/init.sql
    restart: unless-stopped
    ports:
      - ${MYSQL_PORT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_TAGS: ${MYSQL_TAGS}
      SERVICE_NAME: ${MYSQL_NAME}
    volumes:
      - dbdata:/var/lib/mysql/
      - ${DOCKER_PATH}/mysql/my.cnf:/etc/mysql/my.cnf
      - ${DOCKER_PATH}/mysql/init.sql:/etc/mysql/init.sql
      - /var/lib/mysql-files
    networks:
      - app-network
      
  #DBAdmin Acces from localhost:port
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_${DOCKER_NAME}
    environment:
      PMA_HOST: db
      PMA_PORT: ${MYSQL_PORT}
    ports:
      - ${PHPMYADMIN_PORT}:80
    networks:
      - app-network
    depends_on:
      - db

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
